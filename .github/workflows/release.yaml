---

  name: Release

  on:
    push:
      tags:
        - "v[0-9]+.[0-9]+.[0-9]+"
  permissions:
    contents: write
    packages: write
    id-token: write

  jobs:
    lint-and-test:
        uses: ./.github/workflows/base.yaml
    package:
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
        - name: Set up Python
          uses: actions/setup-python@v5
          with:
            python-version: "3.12"
        - name: Install nodejs and yarn
          run: |
            curl -fsSL https://deb.nodesource.com/setup_20.x | sudo -E bash -
            sudo apt install -y nodejs
            sudo npm install -g corepack
            corepack enable
            yarn set version stable
        - name: Install dependencies
          run: |
            python -m pip install --upgrade pip
            python -m pip install -r requirements/all.txt
            yarn install
        - name: Build frontend
          run: yarn build:front
        - name: Build backend
          run: |
            python -m pip install --break-system-packages --upgrade build twine
            python -m build --sdist --wheel --outdir dist/
        - name: Store the distribution packages
          uses: actions/upload-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
    publish-to-pypi:
      name: >-
        Publish Python 🐍 distribution 📦 to PyPI
      if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
      needs: package
      runs-on: ubuntu-latest
      environment:
        name: pypi
        url: https://pypi.org/p/waldiez_studio
      steps:
        - name: Download all the dists
          uses: actions/download-artifact@v4
          with:
            name: python-package-distributions
            path: dist/
        - name: Publish distribution 📦 to PyPI
          uses: pypa/gh-action-pypi-publish@release/v1

    github-release:
      name: >-
        Sign the Python 🐍 distribution 📦 with Sigstore
        and upload them to GitHub Release
      needs:
      - publish-to-pypi
      runs-on: ubuntu-latest

      permissions:
        contents: write
        id-token: write

      steps:
      - name: Download all the dists
        uses: actions/download-artifact@v4
        with:
          name: python-package-distributions
          path: dist/
      - name: Sign the dists with Sigstore
        uses: sigstore/gh-action-sigstore-python@v3.0.0
        with:
          inputs: >-
            ./dist/*.tar.gz
            ./dist/*.whl
      - name: Create GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        run: >-
          gh release create
          '${{ github.ref_name }}'
          --repo '${{ github.repository }}'
          --notes ""
      - name: Upload artifact signatures to GitHub Release
        env:
          GITHUB_TOKEN: ${{ github.token }}
        # Upload to GitHub Release using the `gh` CLI.
        # `dist/` contains the built packages, and the
        # sigstore-produced signatures and certificates.
        run: >-
          gh release upload
          '${{ github.ref_name }}' dist/**
          --repo '${{ github.repository }}'
